[{"name":"class HandlerExecutor(tag: String?) : CloseableExecutor","description":"dev.arunkumar.compass.thread.HandlerExecutor","location":"compass/dev.arunkumar.compass.thread/-handler-executor/index.html","searchKeys":["HandlerExecutor","class HandlerExecutor(tag: String?) : CloseableExecutor","dev.arunkumar.compass.thread.HandlerExecutor"]},{"name":"class RealmDispatcher(tag: String?) : CoroutineDispatcher, AutoCloseable","description":"dev.arunkumar.compass.thread.RealmDispatcher","location":"compass/dev.arunkumar.compass.thread/-realm-dispatcher/index.html","searchKeys":["RealmDispatcher","class RealmDispatcher(tag: String?) : CoroutineDispatcher, AutoCloseable","dev.arunkumar.compass.thread.RealmDispatcher"]},{"name":"class RealmExecutor(tag: String?) : CloseableExecutor","description":"dev.arunkumar.compass.thread.RealmExecutor","location":"compass/dev.arunkumar.compass.thread/-realm-executor/index.html","searchKeys":["RealmExecutor","class RealmExecutor(tag: String?) : CloseableExecutor","dev.arunkumar.compass.thread.RealmExecutor"]},{"name":"fun <T : RealmModel, R> RealmCopyTransform(): RealmModelTransform<T, R>","description":"dev.arunkumar.compass.RealmCopyTransform","location":"compass/dev.arunkumar.compass/-realm-copy-transform.html","searchKeys":["RealmCopyTransform","fun <T : RealmModel, R> RealmCopyTransform(): RealmModelTransform<T, R>","dev.arunkumar.compass.RealmCopyTransform"]},{"name":"fun <T : RealmModel, R> RealmQueryBuilder<T>.asFlow(dispatcher: RealmDispatcherProvider = { RealmDispatcher() }, transform: RealmModelTransform<T, R>): Flow<List<R>>","description":"dev.arunkumar.compass.asFlow","location":"compass/dev.arunkumar.compass/as-flow.html","searchKeys":["asFlow","fun <T : RealmModel, R> RealmQueryBuilder<T>.asFlow(dispatcher: RealmDispatcherProvider = { RealmDispatcher() }, transform: RealmModelTransform<T, R>): Flow<List<R>>","dev.arunkumar.compass.asFlow"]},{"name":"fun <T : RealmModel> RealmQuery(builder: RealmQueryBuilder<T>): RealmQueryBuilder<T>","description":"dev.arunkumar.compass.RealmQuery","location":"compass/dev.arunkumar.compass/-realm-query.html","searchKeys":["RealmQuery","fun <T : RealmModel> RealmQuery(builder: RealmQueryBuilder<T>): RealmQueryBuilder<T>","dev.arunkumar.compass.RealmQuery"]},{"name":"fun <T : RealmModel> RealmQueryBuilder<T>.asFlow(dispatcher: RealmDispatcherProvider = { RealmDispatcher() }): Flow<List<T>>","description":"dev.arunkumar.compass.asFlow","location":"compass/dev.arunkumar.compass/as-flow.html","searchKeys":["asFlow","fun <T : RealmModel> RealmQueryBuilder<T>.asFlow(dispatcher: RealmDispatcherProvider = { RealmDispatcher() }): Flow<List<T>>","dev.arunkumar.compass.asFlow"]},{"name":"fun <T : RealmModel> RealmQueryBuilder<T>.getAll(): List<T>","description":"dev.arunkumar.compass.getAll","location":"compass/dev.arunkumar.compass/get-all.html","searchKeys":["getAll","fun <T : RealmModel> RealmQueryBuilder<T>.getAll(): List<T>","dev.arunkumar.compass.getAll"]},{"name":"fun HandlerExecutor(tag: String? = null)","description":"dev.arunkumar.compass.thread.HandlerExecutor.HandlerExecutor","location":"compass/dev.arunkumar.compass.thread/-handler-executor/-handler-executor.html","searchKeys":["HandlerExecutor","fun HandlerExecutor(tag: String? = null)","dev.arunkumar.compass.thread.HandlerExecutor.HandlerExecutor"]},{"name":"fun RealmDispatcher(tag: String? = null)","description":"dev.arunkumar.compass.thread.RealmDispatcher.RealmDispatcher","location":"compass/dev.arunkumar.compass.thread/-realm-dispatcher/-realm-dispatcher.html","searchKeys":["RealmDispatcher","fun RealmDispatcher(tag: String? = null)","dev.arunkumar.compass.thread.RealmDispatcher.RealmDispatcher"]},{"name":"fun RealmExecutor(tag: String? = null)","description":"dev.arunkumar.compass.thread.RealmExecutor.RealmExecutor","location":"compass/dev.arunkumar.compass.thread/-realm-executor/-realm-executor.html","searchKeys":["RealmExecutor","fun RealmExecutor(tag: String? = null)","dev.arunkumar.compass.thread.RealmExecutor.RealmExecutor"]},{"name":"inline fun <T : RealmModel> Collection<T>.toRealmList(): RealmList<T>","description":"dev.arunkumar.compass.toRealmList","location":"compass/dev.arunkumar.compass/to-realm-list.html","searchKeys":["toRealmList","inline fun <T : RealmModel> Collection<T>.toRealmList(): RealmList<T>","dev.arunkumar.compass.toRealmList"]},{"name":"inline fun <T> RealmFunction(block: RealmFunction<T>): T","description":"dev.arunkumar.compass.RealmFunction","location":"compass/dev.arunkumar.compass/-realm-function.html","searchKeys":["RealmFunction","inline fun <T> RealmFunction(block: RealmFunction<T>): T","dev.arunkumar.compass.RealmFunction"]},{"name":"inline fun DefaultRealm(): Realm","description":"dev.arunkumar.compass.DefaultRealm","location":"compass/dev.arunkumar.compass/-default-realm.html","searchKeys":["DefaultRealm","inline fun DefaultRealm(): Realm","dev.arunkumar.compass.DefaultRealm"]},{"name":"inline fun Realm(block: RealmBlock)","description":"dev.arunkumar.compass.Realm","location":"compass/dev.arunkumar.compass/-realm.html","searchKeys":["Realm","inline fun Realm(block: RealmBlock)","dev.arunkumar.compass.Realm"]},{"name":"inline fun Realm.transact(crossinline block: RealmReceiver)","description":"dev.arunkumar.compass.transact","location":"compass/dev.arunkumar.compass/transact.html","searchKeys":["transact","inline fun Realm.transact(crossinline block: RealmReceiver)","dev.arunkumar.compass.transact"]},{"name":"inline fun RealmTransaction(noinline block: RealmReceiver)","description":"dev.arunkumar.compass.RealmTransaction","location":"compass/dev.arunkumar.compass/-realm-transaction.html","searchKeys":["RealmTransaction","inline fun RealmTransaction(noinline block: RealmReceiver)","dev.arunkumar.compass.RealmTransaction"]},{"name":"interface CloseableExecutor : Executor, AutoCloseable","description":"dev.arunkumar.compass.thread.CloseableExecutor","location":"compass/dev.arunkumar.compass.thread/-closeable-executor/index.html","searchKeys":["CloseableExecutor","interface CloseableExecutor : Executor, AutoCloseable","dev.arunkumar.compass.thread.CloseableExecutor"]},{"name":"open override fun close()","description":"dev.arunkumar.compass.thread.HandlerExecutor.close","location":"compass/dev.arunkumar.compass.thread/-handler-executor/close.html","searchKeys":["close","open override fun close()","dev.arunkumar.compass.thread.HandlerExecutor.close"]},{"name":"open override fun close()","description":"dev.arunkumar.compass.thread.RealmDispatcher.close","location":"compass/dev.arunkumar.compass.thread/-realm-dispatcher/close.html","searchKeys":["close","open override fun close()","dev.arunkumar.compass.thread.RealmDispatcher.close"]},{"name":"open override fun dispatch(context: CoroutineContext, block: Runnable)","description":"dev.arunkumar.compass.thread.RealmDispatcher.dispatch","location":"compass/dev.arunkumar.compass.thread/-realm-dispatcher/dispatch.html","searchKeys":["dispatch","open override fun dispatch(context: CoroutineContext, block: Runnable)","dev.arunkumar.compass.thread.RealmDispatcher.dispatch"]},{"name":"open override fun execute(command: Runnable)","description":"dev.arunkumar.compass.thread.HandlerExecutor.execute","location":"compass/dev.arunkumar.compass.thread/-handler-executor/execute.html","searchKeys":["execute","open override fun execute(command: Runnable)","dev.arunkumar.compass.thread.HandlerExecutor.execute"]},{"name":"open override fun isDispatchNeeded(context: CoroutineContext): Boolean","description":"dev.arunkumar.compass.thread.RealmDispatcher.isDispatchNeeded","location":"compass/dev.arunkumar.compass.thread/-realm-dispatcher/is-dispatch-needed.html","searchKeys":["isDispatchNeeded","open override fun isDispatchNeeded(context: CoroutineContext): Boolean","dev.arunkumar.compass.thread.RealmDispatcher.isDispatchNeeded"]},{"name":"abstract class TiledDataSource<T : Any> : PositionalDataSource<T> ","description":"dev.arunkumar.compass.paging.TiledDataSource","location":"compass-paging/dev.arunkumar.compass.paging/-tiled-data-source/index.html","searchKeys":["TiledDataSource","abstract class TiledDataSource<T : Any> : PositionalDataSource<T> ","dev.arunkumar.compass.paging.TiledDataSource"]},{"name":"abstract fun countItems(): Int","description":"dev.arunkumar.compass.paging.TiledDataSource.countItems","location":"compass-paging/dev.arunkumar.compass.paging/-tiled-data-source/count-items.html","searchKeys":["countItems","abstract fun countItems(): Int","dev.arunkumar.compass.paging.TiledDataSource.countItems"]},{"name":"abstract fun loadRange(startPosition: Int, count: Int): List<T>?","description":"dev.arunkumar.compass.paging.TiledDataSource.loadRange","location":"compass-paging/dev.arunkumar.compass.paging/-tiled-data-source/load-range.html","searchKeys":["loadRange","abstract fun loadRange(startPosition: Int, count: Int): List<T>?","dev.arunkumar.compass.paging.TiledDataSource.loadRange"]},{"name":"class Factory<T : RealmModel, R : Any>(realmQueryBuilder: RealmQueryBuilder<T>, transform: RealmModelTransform<T, R>) : DataSource.Factory<Int, R> ","description":"dev.arunkumar.compass.paging.RealmTiledDataSource.Factory","location":"compass-paging/dev.arunkumar.compass.paging/-realm-tiled-data-source/-factory/index.html","searchKeys":["Factory","class Factory<T : RealmModel, R : Any>(realmQueryBuilder: RealmQueryBuilder<T>, transform: RealmModelTransform<T, R>) : DataSource.Factory<Int, R> ","dev.arunkumar.compass.paging.RealmTiledDataSource.Factory"]},{"name":"class RealmTiledDataSource<T : RealmModel, R : Any> : TiledDataSource<R> ","description":"dev.arunkumar.compass.paging.RealmTiledDataSource","location":"compass-paging/dev.arunkumar.compass.paging/-realm-tiled-data-source/index.html","searchKeys":["RealmTiledDataSource","class RealmTiledDataSource<T : RealmModel, R : Any> : TiledDataSource<R> ","dev.arunkumar.compass.paging.RealmTiledDataSource"]},{"name":"fun <T : RealmModel, R : Any> RealmQueryBuilder<T>.asPagingItems(tag: String = \"PagingItemsExecutor\", pagingConfig: PagingConfig = DefaultPagingConfig, transform: RealmModelTransform<T, R>): Flow<PagingData<R>>","description":"dev.arunkumar.compass.paging.asPagingItems","location":"compass-paging/dev.arunkumar.compass.paging/as-paging-items.html","searchKeys":["asPagingItems","fun <T : RealmModel, R : Any> RealmQueryBuilder<T>.asPagingItems(tag: String = \"PagingItemsExecutor\", pagingConfig: PagingConfig = DefaultPagingConfig, transform: RealmModelTransform<T, R>): Flow<PagingData<R>>","dev.arunkumar.compass.paging.asPagingItems"]},{"name":"fun <T : RealmModel> RealmQueryBuilder<T>.asPagingItems(tag: String = \"PagingItemsExecutor\", pagingConfig: PagingConfig = DefaultPagingConfig): Flow<PagingData<T>>","description":"dev.arunkumar.compass.paging.asPagingItems","location":"compass-paging/dev.arunkumar.compass.paging/as-paging-items.html","searchKeys":["asPagingItems","fun <T : RealmModel> RealmQueryBuilder<T>.asPagingItems(tag: String = \"PagingItemsExecutor\", pagingConfig: PagingConfig = DefaultPagingConfig): Flow<PagingData<T>>","dev.arunkumar.compass.paging.asPagingItems"]},{"name":"fun Factory(realmQueryBuilder: RealmQueryBuilder<T>, transform: RealmModelTransform<T, R>)","description":"dev.arunkumar.compass.paging.RealmTiledDataSource.Factory.Factory","location":"compass-paging/dev.arunkumar.compass.paging/-realm-tiled-data-source/-factory/-factory.html","searchKeys":["Factory","fun Factory(realmQueryBuilder: RealmQueryBuilder<T>, transform: RealmModelTransform<T, R>)","dev.arunkumar.compass.paging.RealmTiledDataSource.Factory.Factory"]},{"name":"fun TiledDataSource()","description":"dev.arunkumar.compass.paging.TiledDataSource.TiledDataSource","location":"compass-paging/dev.arunkumar.compass.paging/-tiled-data-source/-tiled-data-source.html","searchKeys":["TiledDataSource","fun TiledDataSource()","dev.arunkumar.compass.paging.TiledDataSource.TiledDataSource"]},{"name":"open override fun countItems(): Int","description":"dev.arunkumar.compass.paging.RealmTiledDataSource.countItems","location":"compass-paging/dev.arunkumar.compass.paging/-realm-tiled-data-source/count-items.html","searchKeys":["countItems","open override fun countItems(): Int","dev.arunkumar.compass.paging.RealmTiledDataSource.countItems"]},{"name":"open override fun create(): RealmTiledDataSource<T, R>","description":"dev.arunkumar.compass.paging.RealmTiledDataSource.Factory.create","location":"compass-paging/dev.arunkumar.compass.paging/-realm-tiled-data-source/-factory/create.html","searchKeys":["create","open override fun create(): RealmTiledDataSource<T, R>","dev.arunkumar.compass.paging.RealmTiledDataSource.Factory.create"]},{"name":"open override fun loadInitial(params: PositionalDataSource.LoadInitialParams, callback: PositionalDataSource.LoadInitialCallback<T>)","description":"dev.arunkumar.compass.paging.TiledDataSource.loadInitial","location":"compass-paging/dev.arunkumar.compass.paging/-tiled-data-source/load-initial.html","searchKeys":["loadInitial","open override fun loadInitial(params: PositionalDataSource.LoadInitialParams, callback: PositionalDataSource.LoadInitialCallback<T>)","dev.arunkumar.compass.paging.TiledDataSource.loadInitial"]},{"name":"open override fun loadRange(params: PositionalDataSource.LoadRangeParams, callback: PositionalDataSource.LoadRangeCallback<T>)","description":"dev.arunkumar.compass.paging.TiledDataSource.loadRange","location":"compass-paging/dev.arunkumar.compass.paging/-tiled-data-source/load-range.html","searchKeys":["loadRange","open override fun loadRange(params: PositionalDataSource.LoadRangeParams, callback: PositionalDataSource.LoadRangeCallback<T>)","dev.arunkumar.compass.paging.TiledDataSource.loadRange"]},{"name":"open override fun loadRange(startPosition: Int, count: Int): List<R>","description":"dev.arunkumar.compass.paging.RealmTiledDataSource.loadRange","location":"compass-paging/dev.arunkumar.compass.paging/-realm-tiled-data-source/load-range.html","searchKeys":["loadRange","open override fun loadRange(startPosition: Int, count: Int): List<R>","dev.arunkumar.compass.paging.RealmTiledDataSource.loadRange"]},{"name":"val DefaultPagingConfig: PagingConfig","description":"dev.arunkumar.compass.paging.DefaultPagingConfig","location":"compass-paging/dev.arunkumar.compass.paging/-default-paging-config.html","searchKeys":["DefaultPagingConfig","val DefaultPagingConfig: PagingConfig","dev.arunkumar.compass.paging.DefaultPagingConfig"]}]